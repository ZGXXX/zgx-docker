server {
    listen       80;
    server_name _;

    lua_need_request_body on;

    location / {
        # set $resp_body "";
        # set $req_body "";
        # set $req_headers "";

        # client_body_buffer_size 16k;
        # client_max_body_size 16k;

        # rewrite_by_lua_block {
        #     local req_headers = "Headers: ";
        #     ngx.var.req_body = ngx.req.get_body_data();
        #     local h, err = ngx.req.get_headers()
        #     for k, v in pairs(h) do
        #         req_headers = req_headers .. k .. ": " .. v .. "\n";
        #     end

        #     ngx.var.req_headers = req_headers;
        # }

        # body_filter_by_lua '
        #     local resp_body = string.sub(ngx.arg[1], 1, 1000)
        #     ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
        #     if ngx.arg[2] then
        #         ngx.var.resp_body = ngx.ctx.buffered
        #     end
        # ';

        proxy_pass http://172.29.0.127:80;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_read_timeout 10s;
        proxy_send_timeout 5s;
    }
}
